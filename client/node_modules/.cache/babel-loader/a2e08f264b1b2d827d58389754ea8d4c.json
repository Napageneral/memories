{"ast":null,"code":"import _toConsumableArray from\"/Users/tylerbrandt/memories-project/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL,CREATE,UPDATE,DELETE,LIKE}from'../constants/actionTypes';export default(function(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL:return action.payload;case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);case UPDATE:case LIKE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case DELETE:return posts.filter(function(post){return post._id!==action.payload;});default:return posts;}});","map":{"version":3,"sources":["/Users/tylerbrandt/memories-project/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"qIAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,0BAAxD,CAEA,eAAgB,UAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACpC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKP,CAAAA,SAAL,CACI,MAAOM,CAAAA,MAAM,CAACE,OAAd,CACJ,IAAKP,CAAAA,MAAL,CACI,mCAAWI,KAAX,GAAkBC,MAAM,CAACE,OAAzB,GACJ,IAAKN,CAAAA,MAAL,CACA,IAAKE,CAAAA,IAAL,CACI,MAAOC,CAAAA,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,CAAkCL,MAAM,CAACE,OAAzC,CAAmDE,IAA7D,EAAV,CAAP,CACJ,IAAKP,CAAAA,MAAL,CACI,MAAOE,CAAAA,KAAK,CAACO,MAAN,CAAa,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAA9B,EAAb,CAAP,CACJ,QACI,MAAOH,CAAAA,KAAP,CAXR,CAaH,CAdD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default  (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [...posts, action.payload];\n        case UPDATE:\n        case LIKE:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload);\n        default:\n            return posts;\n    }\n}"]},"metadata":{},"sourceType":"module"}