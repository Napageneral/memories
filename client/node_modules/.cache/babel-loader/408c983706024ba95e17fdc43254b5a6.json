{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, VECTORIZEMESSAGE } from '../constants/actionTypes';\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case VECTORIZEMESSAGE:\n      console.log('Reducer:');\n      console.log('action.payload:' + action.payload);\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/tylerbrandt/memories-project/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","VECTORIZEMESSAGE","posts","action","type","payload","console","log","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,gBAAlD,QAA0E,0BAA1E;AAEA,gBAAgB,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,SAAL;AACI,aAAOO,MAAM,CAACE,OAAd;;AACJ,SAAKJ,gBAAL;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,MAAM,CAACE,OAAvC;AACA,aAAOF,MAAM,CAACE,OAAd;;AACJ,SAAKR,MAAL;AACI,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKP,MAAL;AACA,SAAKE,IAAL;AACI,aAAOE,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeK,GAA5B,GAAkCP,MAAM,CAACE,OAAzC,GAAmDI,IAAvE,CAAP;;AACJ,SAAKV,MAAL;AACI,aAAOG,KAAK,CAACS,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAA3C,CAAP;;AACJ;AACI,aAAOH,KAAP;AAfR;AAiBH,CAlBD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, VECTORIZEMESSAGE } from '../constants/actionTypes';\n\nexport default  (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload;\n        case VECTORIZEMESSAGE:\n            console.log('Reducer:');\n            console.log('action.payload:' + action.payload);\n            return action.payload;\n        case CREATE:\n            return [...posts, action.payload];\n        case UPDATE:\n        case LIKE:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload);\n        default:\n            return posts;\n    }\n}"]},"metadata":{},"sourceType":"module"}