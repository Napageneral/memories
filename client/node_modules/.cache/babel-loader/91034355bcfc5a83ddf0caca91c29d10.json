{"ast":null,"code":"var _jsxFileName = \"/Users/tylerbrandt/memories-project/client/src/components/VectorForm/VectorForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { vectorizeInput } from '../../actions/vectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VectorForm = () => {\n  _s();\n\n  const [inputData, setInputData] = useState({\n    message: ''\n  });\n  const [outputVector, setOutputVector] = useState('default');\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const vector = useSelector(state => state.vector);\n  useEffect(() => {\n    if (vector) setOutputVector(vector);\n    console.log('vector:' + vector);\n    console.log('output vector:' + outputVector);\n  }, [vector]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(vectorizeInput(inputData));\n  };\n\n  const clearInput = () => {\n    setInputData({\n      message: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Vector Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Input Text\",\n        fullWidth: true,\n        value: inputData.message,\n        onChange: e => setInputData({ ...inputData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clearInput,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [\"Output Vector: \", outputVector]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VectorForm, \"EPL2TizxG9NTUZ5YOgi3RBwitU4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = VectorForm;\nexport default VectorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VectorForm\");","map":{"version":3,"sources":["/Users/tylerbrandt/memories-project/client/src/components/VectorForm/VectorForm.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","vectorizeInput","VectorForm","inputData","setInputData","message","outputVector","setOutputVector","classes","dispatch","vector","state","console","log","handleSubmit","e","preventDefault","clearInput","paper","root","form","target","value","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useStyles from './styles';\nimport { vectorizeInput } from '../../actions/vectors';\n\nconst VectorForm = () => {\n    const [inputData, setInputData] = useState({message: ''})\n    const [outputVector, setOutputVector] = useState('default')\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const vector = useSelector((state) => state.vector)\n\n    useEffect(() => {\n        if(vector) setOutputVector(vector);\n        console.log('vector:' + vector)\n        console.log('output vector:' + outputVector)\n    }, [vector])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        dispatch(vectorizeInput(inputData))\n    }\n\n    const clearInput = () => {\n        setInputData({ message: ''})\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant = \"h6\">Vector Test</Typography>\n                <TextField name=\"message\" variant=\"outlined\" label=\"Input Text\" fullWidth value={inputData.message} onChange={(e) => setInputData({ ...inputData, message: e.target.value })}/>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clearInput} fullWidth>Clear</Button>\n            </form>\n            <Typography variant = \"h6\">Output Vector: {outputVector}</Typography>\n        </Paper>\n    );\n}\n\nexport default VectorForm;"]},"metadata":{},"sourceType":"module"}